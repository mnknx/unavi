// @generated by protobuf-ts 2.9.1
// @generated from protobuf file "editor/event.proto" (package "xyz.unavi.editor.event", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { RemoveMeshPrimitive } from "./remove";
import { RemoveNode } from "./remove";
import { EditMeshPrimitive } from "./edit";
import { EditNode } from "./edit";
import { EditId } from "./edit";
import { AddMeshPrimitive } from "./add";
import { AddNode } from "./add";
/**
 * @generated from protobuf message xyz.unavi.editor.event.EditorEvent
 */
export interface EditorEvent {
    /**
     * @generated from protobuf oneof: event
     */
    event: {
        oneofKind: "addNode";
        /**
         * @generated from protobuf field: xyz.unavi.editor.add.AddNode add_node = 1;
         */
        addNode: AddNode;
    } | {
        oneofKind: "addMeshPrimitive";
        /**
         * @generated from protobuf field: xyz.unavi.editor.add.AddMeshPrimitive add_mesh_primitive = 2;
         */
        addMeshPrimitive: AddMeshPrimitive;
    } | {
        oneofKind: "editId";
        /**
         * @generated from protobuf field: xyz.unavi.editor.edit.EditId edit_id = 3;
         */
        editId: EditId;
    } | {
        oneofKind: "editNode";
        /**
         * @generated from protobuf field: xyz.unavi.editor.edit.EditNode edit_node = 4;
         */
        editNode: EditNode;
    } | {
        oneofKind: "editMeshPrimitive";
        /**
         * @generated from protobuf field: xyz.unavi.editor.edit.EditMeshPrimitive edit_mesh_primitive = 5;
         */
        editMeshPrimitive: EditMeshPrimitive;
    } | {
        oneofKind: "removeNode";
        /**
         * @generated from protobuf field: xyz.unavi.editor.remove.RemoveNode remove_node = 6;
         */
        removeNode: RemoveNode;
    } | {
        oneofKind: "removeMeshPrimitive";
        /**
         * @generated from protobuf field: xyz.unavi.editor.remove.RemoveMeshPrimitive remove_mesh_primitive = 7;
         */
        removeMeshPrimitive: RemoveMeshPrimitive;
    } | {
        oneofKind: undefined;
    };
}
// @generated message type with reflection information, may provide speed optimized methods
class EditorEvent$Type extends MessageType<EditorEvent> {
    constructor() {
        super("xyz.unavi.editor.event.EditorEvent", [
            { no: 1, name: "add_node", kind: "message", oneof: "event", T: () => AddNode },
            { no: 2, name: "add_mesh_primitive", kind: "message", oneof: "event", T: () => AddMeshPrimitive },
            { no: 3, name: "edit_id", kind: "message", oneof: "event", T: () => EditId },
            { no: 4, name: "edit_node", kind: "message", oneof: "event", T: () => EditNode },
            { no: 5, name: "edit_mesh_primitive", kind: "message", oneof: "event", T: () => EditMeshPrimitive },
            { no: 6, name: "remove_node", kind: "message", oneof: "event", T: () => RemoveNode },
            { no: 7, name: "remove_mesh_primitive", kind: "message", oneof: "event", T: () => RemoveMeshPrimitive }
        ]);
    }
    create(value?: PartialMessage<EditorEvent>): EditorEvent {
        const message = { event: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<EditorEvent>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: EditorEvent): EditorEvent {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* xyz.unavi.editor.add.AddNode add_node */ 1:
                    message.event = {
                        oneofKind: "addNode",
                        addNode: AddNode.internalBinaryRead(reader, reader.uint32(), options, (message.event as any).addNode)
                    };
                    break;
                case /* xyz.unavi.editor.add.AddMeshPrimitive add_mesh_primitive */ 2:
                    message.event = {
                        oneofKind: "addMeshPrimitive",
                        addMeshPrimitive: AddMeshPrimitive.internalBinaryRead(reader, reader.uint32(), options, (message.event as any).addMeshPrimitive)
                    };
                    break;
                case /* xyz.unavi.editor.edit.EditId edit_id */ 3:
                    message.event = {
                        oneofKind: "editId",
                        editId: EditId.internalBinaryRead(reader, reader.uint32(), options, (message.event as any).editId)
                    };
                    break;
                case /* xyz.unavi.editor.edit.EditNode edit_node */ 4:
                    message.event = {
                        oneofKind: "editNode",
                        editNode: EditNode.internalBinaryRead(reader, reader.uint32(), options, (message.event as any).editNode)
                    };
                    break;
                case /* xyz.unavi.editor.edit.EditMeshPrimitive edit_mesh_primitive */ 5:
                    message.event = {
                        oneofKind: "editMeshPrimitive",
                        editMeshPrimitive: EditMeshPrimitive.internalBinaryRead(reader, reader.uint32(), options, (message.event as any).editMeshPrimitive)
                    };
                    break;
                case /* xyz.unavi.editor.remove.RemoveNode remove_node */ 6:
                    message.event = {
                        oneofKind: "removeNode",
                        removeNode: RemoveNode.internalBinaryRead(reader, reader.uint32(), options, (message.event as any).removeNode)
                    };
                    break;
                case /* xyz.unavi.editor.remove.RemoveMeshPrimitive remove_mesh_primitive */ 7:
                    message.event = {
                        oneofKind: "removeMeshPrimitive",
                        removeMeshPrimitive: RemoveMeshPrimitive.internalBinaryRead(reader, reader.uint32(), options, (message.event as any).removeMeshPrimitive)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: EditorEvent, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* xyz.unavi.editor.add.AddNode add_node = 1; */
        if (message.event.oneofKind === "addNode")
            AddNode.internalBinaryWrite(message.event.addNode, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* xyz.unavi.editor.add.AddMeshPrimitive add_mesh_primitive = 2; */
        if (message.event.oneofKind === "addMeshPrimitive")
            AddMeshPrimitive.internalBinaryWrite(message.event.addMeshPrimitive, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* xyz.unavi.editor.edit.EditId edit_id = 3; */
        if (message.event.oneofKind === "editId")
            EditId.internalBinaryWrite(message.event.editId, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* xyz.unavi.editor.edit.EditNode edit_node = 4; */
        if (message.event.oneofKind === "editNode")
            EditNode.internalBinaryWrite(message.event.editNode, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* xyz.unavi.editor.edit.EditMeshPrimitive edit_mesh_primitive = 5; */
        if (message.event.oneofKind === "editMeshPrimitive")
            EditMeshPrimitive.internalBinaryWrite(message.event.editMeshPrimitive, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* xyz.unavi.editor.remove.RemoveNode remove_node = 6; */
        if (message.event.oneofKind === "removeNode")
            RemoveNode.internalBinaryWrite(message.event.removeNode, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* xyz.unavi.editor.remove.RemoveMeshPrimitive remove_mesh_primitive = 7; */
        if (message.event.oneofKind === "removeMeshPrimitive")
            RemoveMeshPrimitive.internalBinaryWrite(message.event.removeMeshPrimitive, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message xyz.unavi.editor.event.EditorEvent
 */
export const EditorEvent = new EditorEvent$Type();
